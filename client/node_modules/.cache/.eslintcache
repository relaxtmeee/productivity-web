[{"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/index.tsx":"1","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/App.tsx":"2","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/input/Input.tsx":"3","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Htag/HTag.tsx":"4","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Input/Input.tsx":"5","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Button/Button.tsx":"6","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/RouterComponent.tsx":"7","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/MainPage/MainPage.tsx":"8","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/AuthPage.tsx":"9","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/PTag/PTag.tsx":"10","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/AuthForm/AuthForm.tsx":"11","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/Layout/Layout.tsx":"12","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/Layout/Footer/Footer.tsx":"13","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/Layout/Navbar/Navbar.tsx":"14","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/store.ts":"15","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/selectorTypedHook.ts":"16","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/services/userAPI.ts":"17","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/services/http.user.ts":"18","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Spinner/Spinner.tsx":"19","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/userSlice.ts":"20","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/postsSlice.ts":"21","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/PostsPage.tsx":"22","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/components/Posts/Posts.tsx":"23","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/services/http.posts.ts":"24","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/components/PostCreate/PostCreate.tsx":"25","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Textarea/Textarea.tsx":"26","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostPage/PostPage.tsx":"27","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostPage/modules/components/Post/Post.tsx":"28","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostPage/modules/services/postAPI.ts":"29","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Error/ErrorBoundary.tsx":"30","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/WarningAuth/WarningAuth.tsx":"31","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/TodosPage.tsx":"32","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/components/Todos/Todos.tsx":"33","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/todosSlice.ts":"34","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/services/todosAPI.ts":"35","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/components/ProjectCreate/ProjectCreate.tsx":"36","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/components/TaskCreate/TaskCreate.tsx":"37"},{"size":331,"mtime":1677163892481,"results":"38","hashOfConfig":"39"},{"size":201,"mtime":1675869847254,"results":"40","hashOfConfig":"39"},{"size":260,"mtime":1675430408531,"results":"41","hashOfConfig":"39"},{"size":604,"mtime":1675731848278,"results":"42","hashOfConfig":"39"},{"size":243,"mtime":1675615554696,"results":"43","hashOfConfig":"39"},{"size":540,"mtime":1677357343637,"results":"44","hashOfConfig":"39"},{"size":759,"mtime":1676646690287,"results":"45","hashOfConfig":"39"},{"size":200,"mtime":1675957993291,"results":"46","hashOfConfig":"39"},{"size":250,"mtime":1675944613277,"results":"47","hashOfConfig":"39"},{"size":630,"mtime":1677356938128,"results":"48","hashOfConfig":"39"},{"size":3277,"mtime":1675958596123,"results":"49","hashOfConfig":"39"},{"size":1807,"mtime":1675965456054,"results":"50","hashOfConfig":"39"},{"size":742,"mtime":1676234243765,"results":"51","hashOfConfig":"39"},{"size":3636,"mtime":1677357491342,"results":"52","hashOfConfig":"39"},{"size":687,"mtime":1676481141050,"results":"53","hashOfConfig":"39"},{"size":180,"mtime":1676194816766,"results":"54","hashOfConfig":"39"},{"size":711,"mtime":1675965331381,"results":"55","hashOfConfig":"39"},{"size":408,"mtime":1675964940943,"results":"56","hashOfConfig":"39"},{"size":292,"mtime":1675943158638,"results":"57","hashOfConfig":"39"},{"size":908,"mtime":1676194779234,"results":"58","hashOfConfig":"39"},{"size":2455,"mtime":1676297749477,"results":"59","hashOfConfig":"39"},{"size":512,"mtime":1676470054481,"results":"60","hashOfConfig":"39"},{"size":2754,"mtime":1676234107809,"results":"61","hashOfConfig":"39"},{"size":779,"mtime":1676201451512,"results":"62","hashOfConfig":"39"},{"size":2128,"mtime":1676297796591,"results":"63","hashOfConfig":"39"},{"size":267,"mtime":1675959646815,"results":"64","hashOfConfig":"39"},{"size":294,"mtime":1676296308243,"results":"65","hashOfConfig":"39"},{"size":2798,"mtime":1676297830062,"results":"66","hashOfConfig":"39"},{"size":917,"mtime":1676297360250,"results":"67","hashOfConfig":"39"},{"size":987,"mtime":1676201915983,"results":"68","hashOfConfig":"39"},{"size":290,"mtime":1676233095692,"results":"69","hashOfConfig":"39"},{"size":465,"mtime":1676478066745,"results":"70","hashOfConfig":"39"},{"size":10914,"mtime":1677439238804,"results":"71","hashOfConfig":"39"},{"size":5062,"mtime":1677354901387,"results":"72","hashOfConfig":"39"},{"size":3807,"mtime":1677269626163,"results":"73","hashOfConfig":"39"},{"size":2301,"mtime":1677270129463,"results":"74","hashOfConfig":"39"},{"size":2298,"mtime":1677269343864,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wekwf3",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/index.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/App.tsx",[],[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/input/Input.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Htag/HTag.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Input/Input.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Button/Button.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/RouterComponent.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/MainPage/MainPage.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/AuthPage.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/PTag/PTag.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/AuthForm/AuthForm.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/Layout/Layout.tsx",["193"],[],"import { FunctionComponent, useEffect, useState } from \"react\";\nimport styles from './Layout.module.css';\nimport { ILayout } from \"./Layout.interface\";\nimport Footer from \"./Footer/Footer\";\nimport Navbar from \"./Navbar/Navbar\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../store/store\";\nimport { check } from \"../AuthPage/modules/services/userAPI\";\nimport { fetchedUser, fetchingUser, fetchUser } from \"../../store/userSlice\";\nimport Spinner from \"../../ui/Spinner/Spinner\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst Layout = ({children}: ILayout):JSX.Element => {\n\n    const [loading, setLoading] = useState(true);\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    useEffect(() => {\n        check()\n            .then((data) => {\n                dispatch(fetchingUser());\n                dispatch(fetchUser({user: data, auth: true}));\n            })\n            .catch(() => {\n                dispatch(fetchedUser());\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }, [])\n\n    if(loading) {\n        return <>\n            <Spinner/>\n        </>\n    }\n\n    return (\n        <Router>\n            <div className={styles.wrapper}>\n                <Navbar />\n                <main \n                    role='main'\n                    className={styles.body}\n\n                >\n                    {children}\n                </main>\n                <Footer className={styles.footer}/>\n            </div>\n        </Router>\n \n    )\n}\n\nexport const withLayout = <T extends Record<string, unknown>>(Component: FunctionComponent<T>) => {\n\treturn function withLayoutComponent(props: T): JSX.Element {\n\t\treturn (\n            <Layout>\n                <Component {...props} />\n            </Layout>\n\t\t);\n\t};\n};","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/Layout/Footer/Footer.tsx",["194","195","196"],[],"import { IFooter } from './Footer.props';\nimport cn from 'classnames';\nimport styles from './Footer.module.css';\nimport format from 'date-fns/format';\n\nconst Footer = ({className, ...props}: IFooter):JSX.Element => {\n    return (\n        <footer className={cn(className, styles.footer)} {...props} role='footer'>\n            <div className={styles.law}>\n                MyWeb © 2022 - {format(new Date(), 'yyyy')} Все права защищены\n            </div>\n            <a href='#'>\n                Пользовательское соглашение\n            </a>\n            <a href='#'>\n                Политика конфиденциальности\n            </a>\n        </footer>\n    )\n}\n\nexport default Footer;","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/Layout/Navbar/Navbar.tsx",["197","198","199"],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/store.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/selectorTypedHook.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/services/userAPI.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/services/http.user.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Spinner/Spinner.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/userSlice.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/postsSlice.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/PostsPage.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/components/Posts/Posts.tsx",["200"],[],"import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport { fetchPosts } from \"../../../../../store/postsSlice\";\nimport { AppDispatch } from \"../../../../../store/store\";\nimport HTag from \"../../../../../ui/Htag/HTag\";\nimport PTag from \"../../../../../ui/PTag/PTag\";\nimport styles from \"./Posts.module.css\";\nimport Spinner from \"../../../../../ui/Spinner/Spinner\";\nimport PostCreate from \"../PostCreate/PostCreate\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport { ErrorMessage } from \"../../../../../ui/Error/ErrorBoundary\";\nimport WarningAuth from \"../../../../../ui/WarningAuth/WarningAuth\";\n\nconst Posts: React.FC = ():JSX.Element => {\n\n    const [open, setOpen] = useState<boolean>(false);\n    \n    const postLoading = useTypedSelector(state => state.posts.postsLoadingStatus);\n    const userId = useTypedSelector(state => state.user.user?.id);\n\n    const dispatch = useDispatch<AppDispatch>();\n    \n    useEffect(() => {\n        if(typeof userId != \"undefined\" ) {\n            dispatch(fetchPosts(userId));\n        }\n    }, [])\n    \n\n    if(postLoading === 'pending') {\n        return <>\n            <Spinner/>\n        </>\n    } \n\n    if(postLoading === 'failed') {\n        return <ErrorMessage />\n    }\n    \n    if(!userId) {\n        return <WarningAuth />\n    }\n\n    return (\n        <div className={styles.posts}>\n            {open ? <PostCreate setOpen={setOpen}/> : null}\n            \n                <div className={styles.add}>\n                    <PTag size=\"18\" className={styles.add_text}>\n                        Do you want to share your thoughts?\n                    </PTag>\n                    <Button onClick={() => setOpen(true)}>Add article</Button>\n                </div>\n\n                <PostsGenaration/>\n        </div>\n    );\n};\n\nconst PostsGenaration = (): JSX.Element => {\n\n    const posts = useTypedSelector(state => state.posts.posts);\n    \n    return (\n        <>\n            {posts && [...posts].sort((a, b) => a.date < b.date ? 1 : -1).map((post) => {\n                return (\n                    <NavLink className={styles.post} key={post.date} to={'/posts/' + post.id}>\n                        <div>\n                            <HTag className={styles.heading} htag=\"h2\">{post.name}</HTag>\n                            <PTag className={styles.description} size=\"16\">{post.description}</PTag>\n                            <PTag className={styles.date} size=\"14\">{new Date(post.date).toLocaleDateString()}</PTag>\n                        </div>\n                    </NavLink>\n                )\n            })}\n        </>\n    )\n}\n\nexport default Posts;","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/services/http.posts.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/components/PostCreate/PostCreate.tsx",["201"],[],"import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addPost, fetchPosts } from '../../../../../store/postsSlice';\nimport { useTypedSelector } from '../../../../../store/selectorTypedHook';\nimport { AppDispatch } from '../../../../../store/store';\nimport Button from '../../../../../ui/Button/Button';\nimport Input from '../../../../../ui/Input/Input';\nimport Textarea from '../../../../../ui/Textarea/Textarea';\nimport { IPostCreate } from '../../interfaces/PostCreate.interface';\nimport { createPost } from '../../services/http.posts';\nimport styles from './PostCreate.module.css';\n\n\nconst PostCreate = ({setOpen, ...props}: IPostCreate): JSX.Element => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const userId = useTypedSelector(state => state.user.user?.id);\n    \n    const dispatch = useDispatch<AppDispatch>();\n\n    const onCreatePost = async () => {\n        const date = new Date().toString();\n        try {\n            if(typeof userId !== \"undefined\" && name.length > 1 && description.length > 1) {\n                const data = await createPost({name, description, date, userId});\n                if(typeof data !== 'undefined' && typeof data !== 'string') {\n                    dispatch(addPost({id: data.id ,name, description, date, userId}));\n                }\n                \n            }\n        } catch (error) {\n            \n        }\n        setOpen(false);\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.create}>\n                <Input value={name} onChange={(e) => setName(e.target.value)} placeholder='Type name'/> \n                <Textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Type description'/>  \n                <div className={styles.buttons}>\n                    <Button onClick={onCreatePost}>Create article</Button>\n                    <Button type='warning' onClick={() => setOpen(false)}>Cancel</Button>\n                </div> \n            </div>\n        </div>\n       \n    );\n};\n\nexport default PostCreate;","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Textarea/Textarea.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostPage/PostPage.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostPage/modules/components/Post/Post.tsx",["202"],[],"import { useEffect } from 'react';\nimport HTag from '../../../../../ui/Htag/HTag';\nimport PTag from '../../../../../ui/PTag/PTag';\nimport styles from './Post.module.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { deletePost, fetchPost } from '../../../../../store/postsSlice';\nimport { useTypedSelector } from '../../../../../store/selectorTypedHook';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../../../../store/store';\nimport Spinner from '../../../../../ui/Spinner/Spinner';\nimport { ErrorMessage } from '../../../../../ui/Error/ErrorBoundary';\nimport Button from '../../../../../ui/Button/Button';\nimport { NavLink } from 'react-router-dom';\nimport { deleteOnePost } from '../../services/postAPI';\n\nconst Post = () => {\n\n    const navigate = useNavigate();\n    const post = useTypedSelector(state => state.posts.post);\n    const loading = useTypedSelector(state => state.posts.postsLoadingStatus);\n    const userId = useTypedSelector(state => state.user.user?.id);\n\n    const { postId } = useParams();\n    const dispatch = useDispatch<AppDispatch>();\n    \n    useEffect(() => {\n        if(typeof userId !== 'undefined' && typeof postId !== 'undefined') {\n            try {\n                dispatch(fetchPost(postId));\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }, [])    \n        \n    const deleteArticle = async () => {\n        if(typeof postId !== 'undefined') {\n            await deleteOnePost(postId)\n                .then(() => {\n                    dispatch(deletePost(postId));\n                    navigate('/posts');\n                })\n        }\n    \n    } \n\n    if(loading === 'pending') {\n        return <Spinner />\n    }\n\n    if (loading === 'failed') {\n        return <ErrorMessage />\n    }\n    \n    return (\n        <>\n            {\n                post ? \n                <div className={styles.block}>\n                    <div className={styles.post}>\n                        <HTag className={styles.heading} htag=\"h2\">{post.name}</HTag>\n                        <PTag className={styles.description} size=\"16\">{post.description}</PTag>\n                        <PTag className={styles.date} size=\"14\">{new Date(post.date).toLocaleDateString()}</PTag>\n                    </div>\n                    <div className={styles.buttons}>\n                        <Button onClick={() => deleteArticle()} className={styles.button} type='danger'>Delete</Button>\n                        <NavLink to={'/posts'}>\n                            <Button className={styles.button} type='warning'>Back</Button>\n                        </NavLink>\n                    </div>\n\n                </div>\n                :\n                null\n            }\n        </>\n    );\n};\n\nexport default Post;","/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostPage/modules/services/postAPI.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/Error/ErrorBoundary.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/ui/WarningAuth/WarningAuth.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/TodosPage.tsx",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/components/Todos/Todos.tsx",["203","204","205"],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/todosSlice.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/services/todosAPI.ts",[],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/components/ProjectCreate/ProjectCreate.tsx",["206"],[],"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/components/TaskCreate/TaskCreate.tsx",["207"],[],{"ruleId":"208","severity":1,"message":"209","line":31,"column":8,"nodeType":"210","endLine":31,"endColumn":10,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":8,"column":69,"nodeType":"214","endLine":8,"endColumn":82},{"ruleId":"215","severity":1,"message":"216","line":12,"column":13,"nodeType":"217","endLine":12,"endColumn":25},{"ruleId":"215","severity":1,"message":"216","line":15,"column":13,"nodeType":"217","endLine":15,"endColumn":25},{"ruleId":"218","severity":1,"message":"219","line":5,"column":36,"nodeType":"220","messageId":"221","endLine":5,"endColumn":45},{"ruleId":"215","severity":1,"message":"216","line":71,"column":25,"nodeType":"217","endLine":71,"endColumn":37},{"ruleId":"215","severity":1,"message":"216","line":74,"column":25,"nodeType":"217","endLine":74,"endColumn":37},{"ruleId":"208","severity":1,"message":"222","line":29,"column":8,"nodeType":"210","endLine":29,"endColumn":10,"suggestions":"223"},{"ruleId":"218","severity":1,"message":"224","line":3,"column":19,"nodeType":"220","messageId":"221","endLine":3,"endColumn":29},{"ruleId":"208","severity":1,"message":"225","line":34,"column":8,"nodeType":"210","endLine":34,"endColumn":10,"suggestions":"226"},{"ruleId":"218","severity":1,"message":"227","line":1,"column":21,"nodeType":"220","messageId":"221","endLine":1,"endColumn":27},{"ruleId":"218","severity":1,"message":"228","line":1,"column":29,"nodeType":"220","messageId":"221","endLine":1,"endColumn":38},{"ruleId":"208","severity":1,"message":"222","line":37,"column":8,"nodeType":"210","endLine":37,"endColumn":10,"suggestions":"229"},{"ruleId":"218","severity":1,"message":"230","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":16},{"ruleId":"218","severity":1,"message":"231","line":5,"column":10,"nodeType":"220","messageId":"221","endLine":5,"endColumn":20},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["232"],"jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["233"],"'fetchPosts' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'postId', and 'userId'. Either include them or remove the dependency array.",["234"],"'useRef' is defined but never used.","'createRef' is defined but never used.",["235"],"'create' is defined but never used.","'addProject' is defined but never used.",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"238","fix":"242"},"Update the dependencies array to be: [dispatch]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch, userId]",{"range":"245","text":"246"},"Update the dependencies array to be: [dispatch, postId, userId]",{"range":"247","text":"248"},{"range":"249","text":"246"},[1081,1083],"[dispatch]",[1200,1202],"[dispatch, userId]",[1377,1379],"[dispatch, postId, userId]",[1800,1802]]