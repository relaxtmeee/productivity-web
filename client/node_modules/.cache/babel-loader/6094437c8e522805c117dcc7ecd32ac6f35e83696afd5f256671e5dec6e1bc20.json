{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/components/ProjectCreate/ProjectCreate.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../../../store/selectorTypedHook';\nimport { addProject } from '../../../../../store/todosSlice';\nimport Button from '../../../../../ui/Button/Button';\nimport Input from '../../../../../ui/Input/Input';\nimport Textarea from '../../../../../ui/Textarea/Textarea';\nimport { createCategoryProject } from '../../services/todosAPI';\nimport styles from './ProjectCreate.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectCreate = _ref => {\n  _s();\n  let {\n    setOpen,\n    ...props\n  } = _ref;\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const userId = useTypedSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const categoryId = useTypedSelector(state => state.todos.currentCategory);\n  const dispatch = useDispatch();\n  const onCreatePost = async () => {\n    try {\n      if (typeof userId !== \"undefined\" && name.length > 1 && description.length > 1) {\n        const data = await createCategoryProject({\n          name,\n          description,\n          categoryId,\n          userId,\n          status: 'progress'\n        });\n        if (typeof data !== 'undefined' && typeof data !== 'string') {\n          dispatch(addProject({\n            id: data.id,\n            name,\n            description,\n            status: 'progress',\n            categoryId,\n            userId\n          }));\n        }\n      }\n    } catch (error) {}\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.create,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Type name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Type description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: onCreatePost,\n          children: \"Create project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"warning\",\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(ProjectCreate, \"di8QxWya7JxbqHqWDCScy5x9CIY=\", false, function () {\n  return [useTypedSelector, useTypedSelector, useDispatch];\n});\n_c = ProjectCreate;\nexport default ProjectCreate;\nvar _c;\n$RefreshReg$(_c, \"ProjectCreate\");","map":{"version":3,"names":["useState","useDispatch","useTypedSelector","addProject","Button","Input","Textarea","createCategoryProject","styles","ProjectCreate","setOpen","props","name","setName","description","setDescription","userId","state","user","id","categoryId","todos","currentCategory","dispatch","onCreatePost","length","data","status","error","wrapper","create","e","target","value","buttons"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/TodosPage/modules/components/ProjectCreate/ProjectCreate.tsx"],"sourcesContent":["\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../../../store/selectorTypedHook';\nimport { AppDispatch } from '../../../../../store/store';\nimport { addProject } from '../../../../../store/todosSlice';\nimport Button from '../../../../../ui/Button/Button';\nimport Input from '../../../../../ui/Input/Input';\nimport Textarea from '../../../../../ui/Textarea/Textarea';\nimport { IProjectCreate } from '../../interfaces/ProjectCreate.interface';\nimport { createCategoryProject } from '../../services/todosAPI';\nimport styles from './ProjectCreate.module.css';\n\n\nconst ProjectCreate = ({setOpen, ...props}: IProjectCreate): JSX.Element => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const userId = useTypedSelector(state => state.user.user?.id);\n    const categoryId = useTypedSelector(state => state.todos.currentCategory);\n    \n    const dispatch = useDispatch<AppDispatch>();\n\n    const onCreatePost = async () => {\n        try {\n            if(typeof userId !== \"undefined\" && name.length > 1 && description.length > 1) {\n                const data = await createCategoryProject({name, description, categoryId, userId, status: 'progress'});\n                if(typeof data !== 'undefined' && typeof data !== 'string') {\n                    dispatch(addProject({id: data.id, name, description, status: 'progress', categoryId, userId}));\n                }\n                \n            }\n        } catch (error) {\n            \n        }\n        setOpen(false);\n    }\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.create}>\n                <Input value={name} onChange={(e) => setName(e.target.value)} placeholder='Type name'/> \n                <Textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Type description'/>  \n                <div className={styles.buttons}>\n                    <Button onClick={onCreatePost}>Create project</Button>\n                    <Button type='warning' onClick={() => setOpen(false)}>Cancel</Button>\n                </div> \n            </div>\n        </div>\n       \n    );\n};\n\nexport default ProjectCreate;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}