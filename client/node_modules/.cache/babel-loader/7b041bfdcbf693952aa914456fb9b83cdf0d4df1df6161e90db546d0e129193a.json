{"ast":null,"code":"import { $authHost } from \"../../../AuthPage/modules/services/http.user\";\nexport async function getHabits(userId) {\n  try {\n    if (typeof userId !== \"undefined\") {\n      var _data$0$dates;\n      const {\n        data\n      } = await $authHost.get(process.env.REACT_APP_API + `/habits/?userId=${userId}`);\n      data[0].dates = (_data$0$dates = data[0].dates) === null || _data$0$dates === void 0 ? void 0 : _data$0$dates.map(date => {\n        return new Date(date).toLocaleDateString();\n      });\n      console.log(data);\n      return data;\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n}\nexport async function createHabit(post) {\n  try {\n    const {\n      data\n    } = await $authHost.post(process.env.REACT_APP_API + `/habits`, post);\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n}\nexport async function patchAddDateToHabit(habitId, date) {\n  try {\n    const {\n      data\n    } = await $authHost.patch(process.env.REACT_APP_API + `/habits`, {\n      habitId,\n      date\n    });\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n}\nexport async function patchDeleteDateFromHabit(habitId, date) {\n  try {\n    const {\n      data\n    } = await $authHost.patch(process.env.REACT_APP_API + `/habits/${habitId}`, date);\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n}","map":{"version":3,"names":["$authHost","getHabits","userId","data","get","process","env","REACT_APP_API","dates","map","date","Date","toLocaleDateString","console","log","error","Error","message","createHabit","post","patchAddDateToHabit","habitId","patch","patchDeleteDateFromHabit"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/services/habitAPI.ts"],"sourcesContent":["import { $authHost } from \"../../../AuthPage/modules/services/http.user\";\nimport { IHabit } from \"../interfaces/Habits.interfaces\";\n\nexport async function getHabits(userId: string): Promise<IHabit[] | undefined | string> {\n    try {\n      if(typeof userId !== \"undefined\") {\n        const { data } = await $authHost.get<IHabit[]>(process.env.REACT_APP_API + `/habits/?userId=${userId}`);\n        \n        data[0].dates = data[0].dates?.map(date => {\n          return new Date(date).toLocaleDateString();\n        });\n        console.log(data);\n        \n        return data;\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        return error.message\n      }      \n    }\n}\n\nexport async function createHabit(post: IHabit) {\n  try {\n    const { data } = await $authHost.post<IHabit>(process.env.REACT_APP_API + `/habits`, post);\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message\n    }   \n  }\n\n\n}\n\nexport async function patchAddDateToHabit(habitId: string, date: string) {\n  try {\n    const { data } = await $authHost.patch<IHabit>(process.env.REACT_APP_API + `/habits`, {habitId, date});    \n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message\n    }   \n  }\n}\n\nexport async function patchDeleteDateFromHabit(habitId: string, date: string) {\n  try {\n    const { data } = await $authHost.patch<IHabit>(process.env.REACT_APP_API + `/habits/${habitId}`, date);\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message\n    }   \n  }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,8CAA8C;AAGxE,OAAO,eAAeC,SAAS,CAACC,MAAc,EAA0C;EACpF,IAAI;IACF,IAAG,OAAOA,MAAM,KAAK,WAAW,EAAE;MAAA;MAChC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAWC,OAAO,CAACC,GAAG,CAACC,aAAa,GAAI,mBAAkBL,MAAO,EAAC,CAAC;MAEvGC,IAAI,CAAC,CAAC,CAAC,CAACK,KAAK,oBAAGL,IAAI,CAAC,CAAC,CAAC,CAACK,KAAK,kDAAb,cAAeC,GAAG,CAACC,IAAI,IAAI;QACzC,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,EAAE;MAC5C,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;MAEjB,OAAOA,IAAI;IACb;EACF,CAAC,CAAC,OAAOY,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACE,OAAO;IACtB;EACF;AACJ;AAEA,OAAO,eAAeC,WAAW,CAACC,IAAY,EAAE;EAC9C,IAAI;IACF,MAAM;MAAEhB;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACmB,IAAI,CAASd,OAAO,CAACC,GAAG,CAACC,aAAa,GAAI,SAAQ,EAAEY,IAAI,CAAC;IAC1F,OAAOhB,IAAI;EACb,CAAC,CAAC,OAAOY,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACE,OAAO;IACtB;EACF;AAGF;AAEA,OAAO,eAAeG,mBAAmB,CAACC,OAAe,EAAEX,IAAY,EAAE;EACvE,IAAI;IACF,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACsB,KAAK,CAASjB,OAAO,CAACC,GAAG,CAACC,aAAa,GAAI,SAAQ,EAAE;MAACc,OAAO;MAAEX;IAAI,CAAC,CAAC;IACtG,OAAOP,IAAI;EACb,CAAC,CAAC,OAAOY,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACE,OAAO;IACtB;EACF;AACF;AAEA,OAAO,eAAeM,wBAAwB,CAACF,OAAe,EAAEX,IAAY,EAAE;EAC5E,IAAI;IACF,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACsB,KAAK,CAASjB,OAAO,CAACC,GAAG,CAACC,aAAa,GAAI,WAAUc,OAAQ,EAAC,EAAEX,IAAI,CAAC;IACtG,OAAOP,IAAI;EACb,CAAC,CAAC,OAAOY,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACE,OAAO;IACtB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}