{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/components/Habits/Habits.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport Input from \"../../../../../ui/Input/Input\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { $authHost } from \"../../../../AuthPage/modules/services/http.user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Habits = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [date, setDate] = useState(new Date().toString());\n  const [dates, setDates] = useState([]);\n  const userId = useTypedSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  useEffect(() => {\n    $authHost.get('/habits?userId=1').then(data => {\n      setDates(data);\n    });\n  }, []);\n  const addHabit = async () => {\n    await $authHost.post('/habits', {\n      name,\n      dates: [date],\n      userId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Month: \", format(new Date(), 'MMMM')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"date\",\n        onChange: e => setDate(new Date(e.target.value).toString()),\n        value: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addHabit,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Habits, \"F3zrQgeo+n0PvXurrgqN5hy1uec=\", false, function () {\n  return [useTypedSelector];\n});\n_c = Habits;\nexport default Habits;\nvar _c;\n$RefreshReg$(_c, \"Habits\");","map":{"version":3,"names":["useEffect","useState","format","useTypedSelector","Input","Button","$authHost","Habits","name","setName","date","setDate","Date","toString","dates","setDates","userId","state","user","id","get","then","data","addHabit","post","e","target","value"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/components/Habits/Habits.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport Input from \"../../../../../ui/Input/Input\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { $authHost } from \"../../../../AuthPage/modules/services/http.user\";\n\ninterface IHabit {\n    id: string\n    name: string\n    date: Date[]\n}\n\nconst Habits:FC = ():JSX.Element => {\n\n    const [name, setName] = useState<string>('');\n    const [date, setDate] = useState<string>(new Date().toString());\n\n    const [dates, setDates] = useState<IHabit[]>([]);\n\n    const userId = useTypedSelector(state => state.user.user?.id)\n    \n    useEffect(() => {\n        $authHost.get<any, IHabit[]>('/habits?userId=1')\n            .then((data) => {\n                setDates(data);\n            })\n    }, [])\n\n    const addHabit = async () => {\n        await $authHost.post('/habits', { name, dates: [date], userId })\n    }\n\n    return (\n        <>\n            <div>\n                Habits\n            </div>\n            <div>\n                Month: {format(new Date(), 'MMMM')}\n            </div>\n                {/* {dates.map(date => {\n                    return (\n                        <div>\n                            {date.name}\n                        </div>\n                    )\n                })} */}\n            <div>\n\n            </div>\n            <div>\n                <Input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n                <Input type=\"date\" onChange={(e) => setDate(new Date(e.target.value).toString())} value={date}/>\n                <Button onClick={addHabit}> \n                    SEND\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default Habits;"],"mappings":";;AAAA,SAAaA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,MAAM,MAAM,iCAAiC;AACpD,SAASC,SAAS,QAAQ,iDAAiD;AAAC;AAAA;AAQ5E,MAAMC,MAAS,GAAG,MAAkB;EAAA;EAEhC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAS,IAAIW,IAAI,EAAE,CAACC,QAAQ,EAAE,CAAC;EAE/D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAW,EAAE,CAAC;EAEhD,MAAMe,MAAM,GAAGb,gBAAgB,CAACc,KAAK;IAAA;IAAA,2BAAIA,KAAK,CAACC,IAAI,CAACA,IAAI,qDAAf,iBAAiBC,EAAE;EAAA,EAAC;EAE7DnB,SAAS,CAAC,MAAM;IACZM,SAAS,CAACc,GAAG,CAAgB,kBAAkB,CAAC,CAC3CC,IAAI,CAAEC,IAAI,IAAK;MACZP,QAAQ,CAACO,IAAI,CAAC;IAClB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAG,YAAY;IACzB,MAAMjB,SAAS,CAACkB,IAAI,CAAC,SAAS,EAAE;MAAEhB,IAAI;MAAEM,KAAK,EAAE,CAACJ,IAAI,CAAC;MAAEM;IAAO,CAAC,CAAC;EACpE,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAK;IAEL;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAK,SACM,EAACd,MAAM,CAAC,IAAIU,IAAI,EAAE,EAAE,MAAM,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC,eAQN;MAAA;MAAA;MAAA;IAAA,QAEM,eACN;MAAA,wBACI,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGa,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAC,KAAK,EAAEnB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5E,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGiB,CAAC,IAAKd,OAAO,CAAC,IAAIC,IAAI,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAACd,QAAQ,EAAE,CAAE;QAAC,KAAK,EAAEH;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAChG,QAAC,MAAM;QAAC,OAAO,EAAEa,QAAS;QAAA,UAAC;MAE3B;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA,gBACP;AAEX,CAAC;AAAC,GA/CIhB,MAAS;EAAA,QAOIJ,gBAAgB;AAAA;AAAA,KAP7BI,MAAS;AAiDf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}