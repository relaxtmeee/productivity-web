{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  user: {},\n  userLoadingStatus: 'idle'\n};\n\n// export const fetchPosts = createAsyncThunk(\n//     'posts/fetchPosts',\n//     async (thunkAPI) => {\n//         return await getPost();\n//     }\n// )\n\nconst postsSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    fetchingUser: (state, action) => {\n      state.user = 'pending';\n    },\n    fetchUser: (state, action) => {\n      state.userLoadingStatus = 'idle';\n      state.user = action.payload;\n    },\n    fetchedUser: (state, action) => {\n      state.userLoadingStatus = 'idle';\n    }\n  }\n});\nconst {\n  actions,\n  reducer\n} = postsSlice;\nconst {\n  fetchingUser,\n  fetchUser,\n  fetchedUser\n} = actions;\nexport default reducer;","map":{"version":3,"names":["createSlice","initialState","user","userLoadingStatus","postsSlice","name","reducers","fetchingUser","state","action","fetchUser","payload","fetchedUser","actions","reducer"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/services/userSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\n\ninterface IUser {\n    user: { email: string, id: number, role: string } | unknown;\n    userLoadingStatus: 'idle' | 'pending' | 'succeeded' | 'failed';\n}\n\nconst initialState: IUser = {\n    user: {},\n    userLoadingStatus: 'idle'\n} \n\n// export const fetchPosts = createAsyncThunk(\n//     'posts/fetchPosts',\n//     async (thunkAPI) => {\n//         return await getPost();\n//     }\n// )\n\nconst postsSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        fetchingUser: (state, action)  => {state.user = 'pending'},\n        fetchUser: (state, action)  => {\n            state.userLoadingStatus = 'idle';\n            state.user = action.payload;\n        },\n        fetchedUser: (state, action)  => {state.userLoadingStatus = 'idle'},\n    }\n})\n\nconst { actions, reducer } = postsSlice;\n\nconst { fetchingUser, fetchUser, fetchedUser } = actions;\n\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,QAA0B,kBAAkB;AAQhE,MAAMC,YAAmB,GAAG;EACxBC,IAAI,EAAE,CAAC,CAAC;EACRC,iBAAiB,EAAE;AACvB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAGJ,WAAW,CAAC;EAC3BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZK,QAAQ,EAAE;IACNC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAM;MAACD,KAAK,CAACN,IAAI,GAAG,SAAS;IAAA,CAAC;IAC1DQ,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAM;MAC3BD,KAAK,CAACL,iBAAiB,GAAG,MAAM;MAChCK,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACE,OAAO;IAC/B,CAAC;IACDC,WAAW,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAM;MAACD,KAAK,CAACL,iBAAiB,GAAG,MAAM;IAAA;EACtE;AACJ,CAAC,CAAC;AAEF,MAAM;EAAEU,OAAO;EAAEC;AAAQ,CAAC,GAAGV,UAAU;AAEvC,MAAM;EAAEG,YAAY;EAAEG,SAAS;EAAEE;AAAY,CAAC,GAAGC,OAAO;AAExD,eAAeC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}