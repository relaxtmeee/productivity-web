{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/HabitsPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addHabit } from '../../store/habitsSlice';\nimport { useTypedSelector } from '../../store/selectorTypedHook';\nimport Button from '../../ui/Button/Button';\nimport Input from '../../ui/Input/Input';\nimport styles from './HabitsPage.module.css';\nimport Habits from './modules/components/Habits/Habits';\nimport { createHabit } from './modules/services/habitAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HabitsPage = () => {\n  _s();\n  const [name, setName] = useState('');\n  const dispatch = useDispatch();\n  const userId = useTypedSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const habits = useTypedSelector(state => state.habits.habits);\n  const addNewHabit = async () => {\n    await createHabit({\n      name: name,\n      dates: [],\n      userId: userId || ''\n    }).then(data => {\n      dispatch(addHabit(data));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.layout,\n      children: /*#__PURE__*/_jsxDEV(Habits, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0440\\u0438\\u0432\\u044B\\u0447\\u043A\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addNewHabit,\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(HabitsPage, \"NYhIFk0jyJ44SXhRN1xUOfZQ9TA=\", false, function () {\n  return [useDispatch, useTypedSelector, useTypedSelector];\n});\n_c = HabitsPage;\nexport default HabitsPage;\nvar _c;\n$RefreshReg$(_c, \"HabitsPage\");","map":{"version":3,"names":["useState","useDispatch","addHabit","useTypedSelector","Button","Input","styles","Habits","createHabit","HabitsPage","name","setName","dispatch","userId","state","user","id","habits","addNewHabit","dates","then","data","layout","e","target","value"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/HabitsPage.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addHabit } from '../../store/habitsSlice';\nimport { useTypedSelector } from '../../store/selectorTypedHook';\nimport { AppDispatch } from '../../store/store';\nimport Button from '../../ui/Button/Button';\nimport Input from '../../ui/Input/Input';\nimport styles from './HabitsPage.module.css';\nimport Habits from './modules/components/Habits/Habits';\nimport { createHabit } from './modules/services/habitAPI';\n\nconst HabitsPage = () => {\n    const [name, setName] = useState<string>('');\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    const userId = useTypedSelector(state => state.user.user?.id)\n    const habits = useTypedSelector(state => state.habits.habits);\n    \n    const addNewHabit = async () => {\n        await createHabit({name: name, dates: [], userId: userId || ''})\n            .then((data) => {\n                dispatch(addHabit(data));\n            })\n    }\n    \n    return (\n        <>  \n        <table className={styles.layout}>\n            <Habits/>\n        </table>\n        <div>\n            Новая привычка\n        </div>\n        <div>\n            <Input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n            <Button onClick={addNewHabit}> \n                SEND\n            </Button>\n        </div>\n        </>\n        \n       \n    );\n};\n\nexport default HabitsPage;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,gBAAgB,QAAQ,+BAA+B;AAEhE,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,MAAM,MAAM,oCAAoC;AACvD,SAASC,WAAW,QAAQ,6BAA6B;AAAC;AAAA;AAE1D,MAAMC,UAAU,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAS,EAAE,CAAC;EAE5C,MAAMY,QAAQ,GAAGX,WAAW,EAAe;EAE3C,MAAMY,MAAM,GAAGV,gBAAgB,CAACW,KAAK;IAAA;IAAA,2BAAIA,KAAK,CAACC,IAAI,CAACA,IAAI,qDAAf,iBAAiBC,EAAE;EAAA,EAAC;EAC7D,MAAMC,MAAM,GAAGd,gBAAgB,CAACW,KAAK,IAAIA,KAAK,CAACG,MAAM,CAACA,MAAM,CAAC;EAE7D,MAAMC,WAAW,GAAG,YAAY;IAC5B,MAAMV,WAAW,CAAC;MAACE,IAAI,EAAEA,IAAI;MAAES,KAAK,EAAE,EAAE;MAAEN,MAAM,EAAEA,MAAM,IAAI;IAAE,CAAC,CAAC,CAC3DO,IAAI,CAAEC,IAAI,IAAK;MACZT,QAAQ,CAACV,QAAQ,CAACmB,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC;EACV,CAAC;EAED,oBACI;IAAA,wBACA;MAAO,SAAS,EAAEf,MAAM,CAACgB,MAAO;MAAA,uBAC5B,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACL,eACR;MAAA,UAAK;IAEL;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,wBACI,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGC,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAC,KAAK,EAAEf;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5E,QAAC,MAAM;QAAC,OAAO,EAAEQ,WAAY;QAAA,UAAC;MAE9B;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA,gBACH;AAIX,CAAC;AAAC,GAjCIT,UAAU;EAAA,QAGKR,WAAW,EAEbE,gBAAgB,EAChBA,gBAAgB;AAAA;AAAA,KAN7BM,UAAU;AAmChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}