{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/components/Habits/Habits.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport { createHabit } from \"../../services/habitAPI\";\nimport { useDispatch } from \"react-redux\";\nimport { addHabit, fetchHabits } from \"../../../../../store/habitsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Habits = () => {\n  _s();\n  const [name, setName] = useState('');\n  const dispatch = useDispatch();\n  const userId = useTypedSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const habits = useTypedSelector(state => state.habits.habits);\n  useEffect(() => {\n    if (typeof userId !== 'undefined') {\n      dispatch(fetchHabits(userId));\n    }\n  }, []);\n  const addNewHabit = async () => {\n    await createHabit({\n      name: name,\n      dates: [],\n      userId: userId || ''\n    }).then(data => {\n      dispatch(addHabit(data));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Month: \", format(new Date(), 'MMMM')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), habits === null || habits === void 0 ? void 0 : habits.map(habit => {\n      var _habit$dates;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: habit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: (_habit$dates = habit.dates) === null || _habit$dates === void 0 ? void 0 : _habit$dates.map(date => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: new Date(date).toDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    })]\n  }, void 0, true);\n};\n_s(Habits, \"yyI6kra48xDETjBlhnweEFcqdBU=\", false, function () {\n  return [useDispatch, useTypedSelector, useTypedSelector];\n});\n_c = Habits;\nexport default Habits;\nvar _c;\n$RefreshReg$(_c, \"Habits\");","map":{"version":3,"names":["useEffect","useState","format","useTypedSelector","createHabit","useDispatch","addHabit","fetchHabits","Habits","name","setName","dispatch","userId","state","user","id","habits","addNewHabit","dates","then","data","Date","map","habit","date","toDateString"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/components/Habits/Habits.tsx"],"sourcesContent":["import { FC, Fragment, useEffect, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport Input from \"../../../../../ui/Input/Input\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { $authHost } from \"../../../../AuthPage/modules/services/http.user\";\nimport { createHabit } from \"../../services/habitAPI\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../../../store/store\";\nimport { addHabit, fetchHabits } from \"../../../../../store/habitsSlice\";\n\nconst Habits:FC = ():JSX.Element => {\n\n    const [name, setName] = useState<string>('');\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    const userId = useTypedSelector(state => state.user.user?.id)\n    const habits = useTypedSelector(state => state.habits.habits);\n\n    useEffect(() => {\n        if (typeof userId !== 'undefined') {\n            dispatch(fetchHabits(userId));\n        }\n    }, [])\n\n    const addNewHabit = async () => {\n        await createHabit({name: name, dates: [], userId: userId || ''})\n            .then((data) => {\n                dispatch(addHabit(data));\n            })\n    }\n\n    return (\n        <>\n            <div>\n                Habits\n            </div>\n            <div>\n                Month: {format(new Date(), 'MMMM')}\n            </div>\n            {habits?.map(habit => {\n                return (\n                    <>\n                        <div>{habit.name}</div>\n                        <div>{habit.dates?.map(date => {\n                            return (\n                                <div>\n                                    {new Date(date).toDateString()}\n                                </div>\n                            )\n                        })}</div>\n                    </>\n                )\n            })}\n        </>\n    );\n};\n\nexport default Habits;"],"mappings":";;AAAA,SAAuBA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACzD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,gBAAgB,QAAQ,wCAAwC;AAIzE,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kCAAkC;AAAC;AAAA;AAEzE,MAAMC,MAAS,GAAG,MAAkB;EAAA;EAEhC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAE5C,MAAMU,QAAQ,GAAGN,WAAW,EAAe;EAE3C,MAAMO,MAAM,GAAGT,gBAAgB,CAACU,KAAK;IAAA;IAAA,2BAAIA,KAAK,CAACC,IAAI,CAACA,IAAI,qDAAf,iBAAiBC,EAAE;EAAA,EAAC;EAC7D,MAAMC,MAAM,GAAGb,gBAAgB,CAACU,KAAK,IAAIA,KAAK,CAACG,MAAM,CAACA,MAAM,CAAC;EAE7DhB,SAAS,CAAC,MAAM;IACZ,IAAI,OAAOY,MAAM,KAAK,WAAW,EAAE;MAC/BD,QAAQ,CAACJ,WAAW,CAACK,MAAM,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,WAAW,GAAG,YAAY;IAC5B,MAAMb,WAAW,CAAC;MAACK,IAAI,EAAEA,IAAI;MAAES,KAAK,EAAE,EAAE;MAAEN,MAAM,EAAEA,MAAM,IAAI;IAAE,CAAC,CAAC,CAC3DO,IAAI,CAAEC,IAAI,IAAK;MACZT,QAAQ,CAACL,QAAQ,CAACc,IAAI,CAAC,CAAC;IAC5B,CAAC,CAAC;EACV,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAK;IAEL;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAK,SACM,EAAClB,MAAM,CAAC,IAAImB,IAAI,EAAE,EAAE,MAAM,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC,EACLL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,GAAG,CAACC,KAAK,IAAI;MAAA;MAClB,oBACI;QAAA,wBACI;UAAA,UAAMA,KAAK,CAACd;QAAI;UAAA;UAAA;UAAA;QAAA,QAAO,eACvB;UAAA,0BAAMc,KAAK,CAACL,KAAK,iDAAX,aAAaI,GAAG,CAACE,IAAI,IAAI;YAC3B,oBACI;cAAA,UACK,IAAIH,IAAI,CAACG,IAAI,CAAC,CAACC,YAAY;YAAE;cAAA;cAAA;cAAA;YAAA,QAC5B;UAEd,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA,gBACV;IAEX,CAAC,CAAC;EAAA,gBACH;AAEX,CAAC;AAAC,GA9CIjB,MAAS;EAAA,QAIMH,WAAW,EAEbF,gBAAgB,EAChBA,gBAAgB;AAAA;AAAA,KAP7BK,MAAS;AAgDf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}