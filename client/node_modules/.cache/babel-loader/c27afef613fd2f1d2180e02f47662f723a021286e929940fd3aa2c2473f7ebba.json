{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/components/Posts/Posts.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport { fetchPosts } from \"../../../../../store/postsSlice\";\nimport HTag from \"../../../../../ui/Htag/HTag\";\nimport PTag from \"../../../../../ui/PTag/PTag\";\nimport styles from \"./Posts.module.css\";\nimport Spinner from \"../../../../../ui/Spinner/Spinner\";\nimport PostCreate from \"../PostCreate/PostCreate\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport { ErrorMessage } from \"../../../../../ui/Error/ErrorBoundary\";\nimport WarningAuth from \"../../../../../ui/WarningAuth/WarningAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const postLoading = useTypedSelector(state => state.posts.postsLoadingStatus);\n  const userId = useTypedSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (typeof userId != \"undefined\") {\n      dispatch(fetchPosts(userId));\n    }\n  }, []);\n  if (postLoading === 'pending') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  if (postLoading === 'failed') {\n    return /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  if (!userId) {\n    return /*#__PURE__*/_jsxDEV(WarningAuth, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.posts,\n    children: [open ? /*#__PURE__*/_jsxDEV(PostCreate, {\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.add,\n      children: [/*#__PURE__*/_jsxDEV(PTag, {\n        size: \"18\",\n        className: styles.add_text,\n        children: \"Do you want to share your thoughts?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setOpen(true),\n        children: \"Add article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(PostsGenaration, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"tt2jcADu0UPfAJN3tv9zg0swNfw=\", false, function () {\n  return [useTypedSelector, useTypedSelector, useDispatch];\n});\n_c = Posts;\nconst PostsGenaration = () => {\n  _s2();\n  const posts = useTypedSelector(state => state.posts.posts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts && [...posts].sort((a, b) => a.date < b.date ? 1 : -1).map(post => {\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        className: styles.post,\n        to: '/posts/' + post.id,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(HTag, {\n            className: styles.heading,\n            htag: \"h2\",\n            children: post.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PTag, {\n            className: styles.description,\n            size: \"16\",\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(PTag, {\n            className: styles.date,\n            size: \"14\",\n            children: new Date(post.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, post.date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n};\n_s2(PostsGenaration, \"UlmN4DJXBV7Y4ZFwQN1pteKUW2E=\", false, function () {\n  return [useTypedSelector];\n});\n_c2 = PostsGenaration;\nexport default Posts;\nvar _c, _c2;\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"PostsGenaration\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useTypedSelector","fetchPosts","HTag","PTag","styles","Spinner","PostCreate","Button","NavLink","ErrorMessage","WarningAuth","Posts","open","setOpen","postLoading","state","posts","postsLoadingStatus","userId","user","id","dispatch","add","add_text","PostsGenaration","sort","a","b","date","map","post","heading","name","description","Date","toLocaleDateString"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/components/Posts/Posts.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport { fetchPosts } from \"../../../../../store/postsSlice\";\nimport { AppDispatch } from \"../../../../../store/store\";\nimport HTag from \"../../../../../ui/Htag/HTag\";\nimport PTag from \"../../../../../ui/PTag/PTag\";\nimport styles from \"./Posts.module.css\";\nimport Spinner from \"../../../../../ui/Spinner/Spinner\";\nimport PostCreate from \"../PostCreate/PostCreate\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport { ErrorMessage } from \"../../../../../ui/Error/ErrorBoundary\";\nimport WarningAuth from \"../../../../../ui/WarningAuth/WarningAuth\";\n\nconst Posts: React.FC = ():JSX.Element => {\n\n    const [open, setOpen] = useState<boolean>(false);\n    \n    const postLoading = useTypedSelector(state => state.posts.postsLoadingStatus);\n    const userId = useTypedSelector(state => state.user.user?.id);\n\n    const dispatch = useDispatch<AppDispatch>();\n    \n    useEffect(() => {\n        if(typeof userId != \"undefined\" ) {\n            dispatch(fetchPosts(userId));\n        }\n    }, [])\n    \n\n    if(postLoading === 'pending') {\n        return <>\n            <Spinner/>\n        </>\n    } \n\n    if(postLoading === 'failed') {\n        return <ErrorMessage />\n    }\n    \n    if(!userId) {\n        return <WarningAuth />\n    }\n\n    return (\n        <div className={styles.posts}>\n            {open ? <PostCreate setOpen={setOpen}/> : null}\n            \n                <div className={styles.add}>\n                    <PTag size=\"18\" className={styles.add_text}>\n                        Do you want to share your thoughts?\n                    </PTag>\n                    <Button onClick={() => setOpen(true)}>Add article</Button>\n                </div>\n\n                <PostsGenaration/>\n        </div>\n    );\n};\n\nconst PostsGenaration = (): JSX.Element => {\n\n    const posts = useTypedSelector(state => state.posts.posts);\n    \n    return (\n        <>\n            {posts && [...posts].sort((a, b) => a.date < b.date ? 1 : -1).map((post) => {\n                return (\n                    <NavLink className={styles.post} key={post.date} to={'/posts/' + post.id}>\n                        <div>\n                            <HTag className={styles.heading} htag=\"h2\">{post.name}</HTag>\n                            <PTag className={styles.description} size=\"16\">{post.description}</PTag>\n                            <PTag className={styles.date} size=\"14\">{new Date(post.date).toLocaleDateString()}</PTag>\n                        </div>\n                    </NavLink>\n                )\n            })}\n        </>\n    )\n}\n\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}