{"ast":null,"code":"import { $authHost } from \"../../../AuthPage/modules/services/http.user\";\nexport async function getHabits(userId) {\n  try {\n    if (typeof userId !== \"undefined\") {\n      const {\n        data\n      } = await $authHost.get(process.env.REACT_APP_API + `/habits/?userId=${userId}`);\n      data.map(habit => {\n        var _habit$dates;\n        return (_habit$dates = habit.dates) === null || _habit$dates === void 0 ? void 0 : _habit$dates.map(date => {\n          return new Date(date).toLocaleDateString();\n        });\n      });\n      console.log(data);\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n}\nexport async function createHabit(post) {\n  try {\n    const {\n      data\n    } = await $authHost.post(process.env.REACT_APP_API + `/habits`, post);\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n}\nexport async function patchAddDateToHabit(habitId, date) {\n  try {\n    const {\n      data\n    } = await $authHost.patch(process.env.REACT_APP_API + `/habits`, {\n      habitId,\n      date\n    });\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n}\nexport async function patchDeleteDateFromHabit(habitId, date) {\n  try {\n    const {\n      data\n    } = await $authHost.patch(process.env.REACT_APP_API + `/habits/${habitId}`, date);\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message;\n    }\n  }\n}","map":{"version":3,"names":["$authHost","getHabits","userId","data","get","process","env","REACT_APP_API","map","habit","dates","date","Date","toLocaleDateString","console","log","error","Error","message","createHabit","post","patchAddDateToHabit","habitId","patch","patchDeleteDateFromHabit"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/services/habitAPI.ts"],"sourcesContent":["import { $authHost } from \"../../../AuthPage/modules/services/http.user\";\nimport { IHabit } from \"../interfaces/Habits.interfaces\";\n\nexport async function getHabits(userId: string): Promise<IHabit[] | undefined | string> {\n    try {\n      if(typeof userId !== \"undefined\") {\n        const { data } = await $authHost.get<IHabit[]>(process.env.REACT_APP_API + `/habits/?userId=${userId}`);\n        \n        data.map(habit => {\n          return (\n              habit.dates?.map(date => {\n                return new Date(date).toLocaleDateString();\n              })\n          )\n        })\n        console.log(data);\n        \n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        return error.message\n      }      \n    }\n}\n\nexport async function createHabit(post: IHabit) {\n  try {\n    const { data } = await $authHost.post<IHabit>(process.env.REACT_APP_API + `/habits`, post);\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message\n    }   \n  }\n\n\n}\n\nexport async function patchAddDateToHabit(habitId: string, date: string) {\n  try {\n    const { data } = await $authHost.patch<IHabit>(process.env.REACT_APP_API + `/habits`, {habitId, date});    \n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message\n    }   \n  }\n}\n\nexport async function patchDeleteDateFromHabit(habitId: string, date: string) {\n  try {\n    const { data } = await $authHost.patch<IHabit>(process.env.REACT_APP_API + `/habits/${habitId}`, date);\n    return data;\n  } catch (error) {\n    if (error instanceof Error) {\n      return error.message\n    }   \n  }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,8CAA8C;AAGxE,OAAO,eAAeC,SAAS,CAACC,MAAc,EAA0C;EACpF,IAAI;IACF,IAAG,OAAOA,MAAM,KAAK,WAAW,EAAE;MAChC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMH,SAAS,CAACI,GAAG,CAAWC,OAAO,CAACC,GAAG,CAACC,aAAa,GAAI,mBAAkBL,MAAO,EAAC,CAAC;MAEvGC,IAAI,CAACK,GAAG,CAACC,KAAK,IAAI;QAAA;QAChB,uBACIA,KAAK,CAACC,KAAK,iDAAX,aAAaF,GAAG,CAACG,IAAI,IAAI;UACvB,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,EAAE;QAC5C,CAAC,CAAC;MAER,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;IAEnB;EACF,CAAC,CAAC,OAAOa,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACE,OAAO;IACtB;EACF;AACJ;AAEA,OAAO,eAAeC,WAAW,CAACC,IAAY,EAAE;EAC9C,IAAI;IACF,MAAM;MAAEjB;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACoB,IAAI,CAASf,OAAO,CAACC,GAAG,CAACC,aAAa,GAAI,SAAQ,EAAEa,IAAI,CAAC;IAC1F,OAAOjB,IAAI;EACb,CAAC,CAAC,OAAOa,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACE,OAAO;IACtB;EACF;AAGF;AAEA,OAAO,eAAeG,mBAAmB,CAACC,OAAe,EAAEX,IAAY,EAAE;EACvE,IAAI;IACF,MAAM;MAAER;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACuB,KAAK,CAASlB,OAAO,CAACC,GAAG,CAACC,aAAa,GAAI,SAAQ,EAAE;MAACe,OAAO;MAAEX;IAAI,CAAC,CAAC;IACtG,OAAOR,IAAI;EACb,CAAC,CAAC,OAAOa,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACE,OAAO;IACtB;EACF;AACF;AAEA,OAAO,eAAeM,wBAAwB,CAACF,OAAe,EAAEX,IAAY,EAAE;EAC5E,IAAI;IACF,MAAM;MAAER;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACuB,KAAK,CAASlB,OAAO,CAACC,GAAG,CAACC,aAAa,GAAI,WAAUe,OAAQ,EAAC,EAAEX,IAAI,CAAC;IACtG,OAAOR,IAAI;EACb,CAAC,CAAC,OAAOa,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1B,OAAOD,KAAK,CAACE,OAAO;IACtB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}