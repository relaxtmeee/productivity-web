{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { getCategories } from \"../pages/TodosPage/modules/services/todosAPI\";\nconst initialState = {\n  categories: [],\n  postsLoadingStatus: 'idle'\n};\nexport const fetchCategories = createAsyncThunk('posts/fetchCategories', async (userId, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  const response = await getCategories(userId);\n  if (typeof response !== 'string') {\n    return response;\n  } else {\n    return rejectWithValue(response);\n  }\n});\nconst postsSlice = createSlice({\n  name: 'todos',\n  initialState,\n  reducers: {\n    addCategory: (state, action) => {\n      var _state$categories;\n      (_state$categories = state.categories) === null || _state$categories === void 0 ? void 0 : _state$categories.push(action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.postsLoadingStatus = 'pending';\n    }).addCase(fetchCategories.fulfilled, (state, action) => {\n      state.categories = action.payload;\n      state.postsLoadingStatus = 'idle';\n    }).addCase(fetchCategories.rejected, state => {\n      state.postsLoadingStatus = 'failed';\n    }).addDefaultCase(() => {});\n  }\n});\nconst {\n  actions,\n  reducer\n} = postsSlice;\nexport default reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getCategories","initialState","categories","postsLoadingStatus","fetchCategories","userId","rejectWithValue","response","postsSlice","name","reducers","addCategory","state","action","push","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","addDefaultCase","actions","reducer"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/todosSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { ICategory } from \"../pages/TodosPage/modules/interfaces/Category.interface\";\nimport { getCategories } from \"../pages/TodosPage/modules/services/todosAPI\";\n\n\nexport interface ITodos {\n    categories: ICategory[] | undefined\n    postsLoadingStatus: 'idle' | 'pending' | 'succeeded' | 'failed'\n}\n\nconst initialState = {\n    categories: [],\n    postsLoadingStatus: 'idle'\n} as ITodos\n\nexport const fetchCategories = createAsyncThunk(\n    'posts/fetchCategories',\n    async (userId: string, {rejectWithValue}) => {\n        const response = await getCategories(userId);\n        if (typeof response !== 'string') {\n          return response;\n        } else {\n          return rejectWithValue(response);\n        }\n    }\n)\n\nconst postsSlice = createSlice({\n    name: 'todos',\n    initialState,\n    reducers: {\n        addCategory: (state, action) => {state.categories?.push(action.payload)}\n    },\n    extraReducers: (builder) => {\n        builder \n            .addCase(fetchCategories.pending, state => {state.postsLoadingStatus =  'pending'})\n            .addCase(fetchCategories.fulfilled, (state, action) => {\n                state.categories =  action.payload;\n                state.postsLoadingStatus = 'idle';     \n            })\n            .addCase(fetchCategories.rejected, state => {state.postsLoadingStatus = 'failed'})\n            .addDefaultCase(() => {})\n    }\n});\n\n\nconst {actions, reducer} = postsSlice;\n\nexport default reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,SAASC,aAAa,QAAQ,8CAA8C;AAQ5E,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,EAAE;EACdC,kBAAkB,EAAE;AACxB,CAAW;AAEX,OAAO,MAAMC,eAAe,GAAGL,gBAAgB,CAC3C,uBAAuB,EACvB,OAAOM,MAAc,WAAwB;EAAA,IAAtB;IAACC;EAAe,CAAC;EACpC,MAAMC,QAAQ,GAAG,MAAMP,aAAa,CAACK,MAAM,CAAC;EAC5C,IAAI,OAAOE,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOA,QAAQ;EACjB,CAAC,MAAM;IACL,OAAOD,eAAe,CAACC,QAAQ,CAAC;EAClC;AACJ,CAAC,CACJ;AAED,MAAMC,UAAU,GAAGV,WAAW,CAAC;EAC3BW,IAAI,EAAE,OAAO;EACbR,YAAY;EACZS,QAAQ,EAAE;IACNC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAAA;MAAC,qBAAAD,KAAK,CAACV,UAAU,sDAAhB,kBAAkBY,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAAA;EAC3E,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACd,eAAe,CAACe,OAAO,EAAEP,KAAK,IAAI;MAACA,KAAK,CAACT,kBAAkB,GAAI,SAAS;IAAA,CAAC,CAAC,CAClFe,OAAO,CAACd,eAAe,CAACgB,SAAS,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACnDD,KAAK,CAACV,UAAU,GAAIW,MAAM,CAACE,OAAO;MAClCH,KAAK,CAACT,kBAAkB,GAAG,MAAM;IACrC,CAAC,CAAC,CACDe,OAAO,CAACd,eAAe,CAACiB,QAAQ,EAAET,KAAK,IAAI;MAACA,KAAK,CAACT,kBAAkB,GAAG,QAAQ;IAAA,CAAC,CAAC,CACjFmB,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;EACjC;AACJ,CAAC,CAAC;AAGF,MAAM;EAACC,OAAO;EAAEC;AAAO,CAAC,GAAGhB,UAAU;AAErC,eAAegB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}