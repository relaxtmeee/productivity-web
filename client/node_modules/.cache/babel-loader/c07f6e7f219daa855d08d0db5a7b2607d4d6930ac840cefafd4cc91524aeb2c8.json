{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/components/Habits/Habits.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport Input from \"../../../../../ui/Input/Input\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { $authHost } from \"../../../../AuthPage/modules/services/http.user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Habits = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [date, setDate] = useState(new Date().toString());\n  const userId = useTypedSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const addHabit = async () => {\n    await $authHost.post('/habits');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Month: \", format(new Date(), 'MMMM')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: addHabit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"date\",\n        onChange: e => setDate(e.target.value),\n        value: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Habits, \"Vs/xnV+opaJKwO6X6lj468xew28=\", false, function () {\n  return [useTypedSelector];\n});\n_c = Habits;\nexport default Habits;\nvar _c;\n$RefreshReg$(_c, \"Habits\");","map":{"version":3,"names":["useState","format","useTypedSelector","Input","Button","$authHost","Habits","name","setName","date","setDate","Date","toString","userId","state","user","id","addHabit","post","e","target","value"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/components/Habits/Habits.tsx"],"sourcesContent":["import { FC, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport Input from \"../../../../../ui/Input/Input\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { $authHost } from \"../../../../AuthPage/modules/services/http.user\";\n\ninterface IHabit {\n    id: string\n    name: string\n    date: Date[]\n}\n\nconst Habits:FC = ():JSX.Element => {\n\n    const [name, setName] = useState<string>('');\n    const [date, setDate] = useState<string>(new Date().toString());\n\n    const userId = useTypedSelector(state => state.user.user?.id)\n\n    const addHabit = async () => {\n        await $authHost.post('/habits', )\n    }\n\n    return (\n        <>\n            <div>\n                Habits\n            </div>\n            <div>\n                Month: {format(new Date(), 'MMMM')}\n            </div>\n\n            <div>\n\n            </div>\n            <div onClick={addHabit}>\n                <Input type=\"text\" onChange={(e) => setName(e.target.value)} value={name} />\n                <Input type=\"date\" onChange={(e) => setDate(e.target.value)} value={date}/>\n                <Button> \n                    SEND\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default Habits;"],"mappings":";;AAAA,SAAaA,QAAQ,QAAQ,OAAO;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,MAAM,MAAM,iCAAiC;AACpD,SAASC,SAAS,QAAQ,iDAAiD;AAAC;AAAA;AAQ5E,MAAMC,MAAS,GAAG,MAAkB;EAAA;EAEhC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAS,IAAIW,IAAI,EAAE,CAACC,QAAQ,EAAE,CAAC;EAE/D,MAAMC,MAAM,GAAGX,gBAAgB,CAACY,KAAK;IAAA;IAAA,2BAAIA,KAAK,CAACC,IAAI,CAACA,IAAI,qDAAf,iBAAiBC,EAAE;EAAA,EAAC;EAE7D,MAAMC,QAAQ,GAAG,YAAY;IACzB,MAAMZ,SAAS,CAACa,IAAI,CAAC,SAAS,CAAG;EACrC,CAAC;EAED,oBACI;IAAA,wBACI;MAAA,UAAK;IAEL;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAK,SACM,EAACjB,MAAM,CAAC,IAAIU,IAAI,EAAE,EAAE,MAAM,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC,eAEN;MAAA;MAAA;MAAA;IAAA,QAEM,eACN;MAAK,OAAO,EAAEM,QAAS;MAAA,wBACnB,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGE,CAAC,IAAKX,OAAO,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAC,KAAK,EAAEd;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5E,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGY,CAAC,IAAKT,OAAO,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAC,KAAK,EAAEZ;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAC3E,QAAC,MAAM;QAAA,UAAC;MAER;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACP;EAAA,gBACP;AAEX,CAAC;AAAC,GAhCIH,MAAS;EAAA,QAKIJ,gBAAgB;AAAA;AAAA,KAL7BI,MAAS;AAkCf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}