{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/components/Habits/Habits.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport format from \"date-fns/format\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchHabits } from \"../../../../../store/habitsSlice\";\nimport getDaysInMonth from \"date-fns/getDaysInMonth\";\nimport styles from './Habit.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Habits = () => {\n  _s();\n  const dispatch = useDispatch();\n  const userId = useTypedSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const habits = useTypedSelector(state => state.habits.habits);\n  useEffect(() => {\n    if (typeof userId !== 'undefined') {\n      dispatch(fetchHabits(userId));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: [\"Month: \", format(new Date(), 'MMMM')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), habits === null || habits === void 0 ? void 0 : habits.map(habit => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: habit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [...Array(getDaysInMonth(new Date()))].map((date, i) => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: styles.td,\n                children: i\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n// const constructorDate = () => {\n\n//     const daysInMonth = getDaysInMonth(new Date());\n\n//     return (\n\n//     )\n// }\n_s(Habits, \"BnqnP7UHbCJBZCf9KfCng7j8ceE=\", false, function () {\n  return [useDispatch, useTypedSelector, useTypedSelector];\n});\n_c = Habits;\nexport default Habits;\nvar _c;\n$RefreshReg$(_c, \"Habits\");","map":{"version":3,"names":["useEffect","format","useTypedSelector","useDispatch","fetchHabits","getDaysInMonth","styles","Habits","dispatch","userId","state","user","id","habits","Date","map","habit","name","Array","date","i","td"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/HabitsPage/modules/components/Habits/Habits.tsx"],"sourcesContent":["import { FC, Fragment, useEffect, useState } from \"react\";\nimport format from \"date-fns/format\";\nimport { useTypedSelector } from \"../../../../../store/selectorTypedHook\";\nimport Input from \"../../../../../ui/Input/Input\";\nimport Button from \"../../../../../ui/Button/Button\";\nimport { $authHost } from \"../../../../AuthPage/modules/services/http.user\";\nimport { createHabit } from \"../../services/habitAPI\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../../../store/store\";\nimport { addHabit, fetchHabits } from \"../../../../../store/habitsSlice\";\nimport getDaysInMonth from \"date-fns/getDaysInMonth\";\nimport styles from './Habit.module.css';\n\n\nconst Habits:FC = ():JSX.Element => {\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    const userId = useTypedSelector(state => state.user.user?.id)\n    const habits = useTypedSelector(state => state.habits.habits);\n\n    useEffect(() => {\n        if (typeof userId !== 'undefined') {\n            dispatch(fetchHabits(userId));\n        }\n    }, [])\n\n    return (\n        <>\n\n            <tr>\n                <th>\n                    Habits\n                </th>\n                <th>\n                    Month: {format(new Date(), 'MMMM')}\n                </th>\n            </tr>\n            {habits?.map(habit => {\n                return (\n                    <tr>\n                        <td>{habit.name}</td>\n                        <table>\n                            <tr>\n                                {[...Array(getDaysInMonth(new Date()))].map((date, i) => {\n                                    return (\n                                        <td className={styles.td}>\n                                            {i}\n                                        </td>\n                                    )\n                                })}\n                            </tr>\n                        </table>\n\n                    </tr>\n                )\n            })}\n        </>\n    );\n};\n\n\n// const constructorDate = () => {\n\n//     const daysInMonth = getDaysInMonth(new Date());\n\n//     return (\n        \n//     )\n// }\n\n\nexport default Habits;"],"mappings":";;AAAA,SAAuBA,SAAS,QAAkB,OAAO;AACzD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,gBAAgB,QAAQ,wCAAwC;AAKzE,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAAmBC,WAAW,QAAQ,kCAAkC;AACxE,OAAOC,cAAc,MAAM,yBAAyB;AACpD,OAAOC,MAAM,MAAM,oBAAoB;AAAC;AAAA;AAGxC,MAAMC,MAAS,GAAG,MAAkB;EAAA;EAEhC,MAAMC,QAAQ,GAAGL,WAAW,EAAe;EAE3C,MAAMM,MAAM,GAAGP,gBAAgB,CAACQ,KAAK;IAAA;IAAA,2BAAIA,KAAK,CAACC,IAAI,CAACA,IAAI,qDAAf,iBAAiBC,EAAE;EAAA,EAAC;EAC7D,MAAMC,MAAM,GAAGX,gBAAgB,CAACQ,KAAK,IAAIA,KAAK,CAACG,MAAM,CAACA,MAAM,CAAC;EAE7Db,SAAS,CAAC,MAAM;IACZ,IAAI,OAAOS,MAAM,KAAK,WAAW,EAAE;MAC/BD,QAAQ,CAACJ,WAAW,CAACK,MAAM,CAAC,CAAC;IACjC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,wBAEI;MAAA,wBACI;QAAA,UAAI;MAEJ;QAAA;QAAA;QAAA;MAAA,QAAK,eACL;QAAA,WAAI,SACO,EAACR,MAAM,CAAC,IAAIa,IAAI,EAAE,EAAE,MAAM,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,EACJD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,GAAG,CAACC,KAAK,IAAI;MAClB,oBACI;QAAA,wBACI;UAAA,UAAKA,KAAK,CAACC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACrB;UAAA,uBACI;YAAA,UACK,CAAC,GAAGC,KAAK,CAACb,cAAc,CAAC,IAAIS,IAAI,EAAE,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACI,IAAI,EAAEC,CAAC,KAAK;cACrD,oBACI;gBAAI,SAAS,EAAEd,MAAM,CAACe,EAAG;gBAAA,UACpBD;cAAC;gBAAA;gBAAA;gBAAA;cAAA,QACD;YAEb,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA,QACD;MAAA;QAAA;QAAA;QAAA;MAAA,QAEP;IAEb,CAAC,CAAC;EAAA,gBACH;AAEX,CAAC;;AAGD;;AAEA;;AAEA;;AAEA;AACA;AAAA,GAvDMb,MAAS;EAAA,QAEMJ,WAAW,EAEbD,gBAAgB,EAChBA,gBAAgB;AAAA;AAAA,KAL7BK,MAAS;AA0Df,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}