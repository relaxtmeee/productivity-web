{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport posts from '../pages/MainPage/modules/components/Posts/postsSlice';\nimport user from '../pages/MainPage/modules/components/Posts/postsSlice';\nconst stringMiddleware = () => next => action => {\n  if (typeof action === 'string') {\n    return next({\n      type: action\n    });\n  }\n  return next(action);\n};\nconst store = configureStore({\n  reducer: {\n    user,\n    posts\n  }\n  // middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n  // devTools: process.env.NODE_ENV !== 'production'\n});\n\nexport default store;","map":{"version":3,"names":["configureStore","posts","user","stringMiddleware","next","action","type","store","reducer"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/store/store.ts"],"sourcesContent":["import { AnyAction, configureStore, ThunkMiddleware } from '@reduxjs/toolkit';\nimport { ToolkitStore } from '@reduxjs/toolkit/dist/configureStore';\nimport { IUser } from '../pages/AuthPage/modules/services/userSlice';\nimport posts, { IPosts } from '../pages/MainPage/modules/components/Posts/postsSlice';\nimport user from '../pages/MainPage/modules/components/Posts/postsSlice';\n\nconst stringMiddleware = () => (next:any) => (action:any) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n}\n\nconst store = configureStore<{\n    user: IUser;\n    posts: IPosts;\n}, AnyAction>({\n    reducer: { user, posts }\n    // middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n    // devTools: process.env.NODE_ENV !== 'production'\n})\n\nexport default store;\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;"],"mappings":"AAAA,SAAoBA,cAAc,QAAyB,kBAAkB;AAG7E,OAAOC,KAAK,MAAkB,uDAAuD;AACrF,OAAOC,IAAI,MAAM,uDAAuD;AAExE,MAAMC,gBAAgB,GAAG,MAAOC,IAAQ,IAAMC,MAAU,IAAK;EACzD,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC5B,OAAOD,IAAI,CAAC;MACRE,IAAI,EAAED;IACV,CAAC,CAAC;EACN;EACA,OAAOD,IAAI,CAACC,MAAM,CAAC;AACvB,CAAC;AAED,MAAME,KAAK,GAAGP,cAAc,CAGd;EACVQ,OAAO,EAAE;IAAEN,IAAI;IAAED;EAAM;EACvB;EACA;AACJ,CAAC,CAAC;;AAEF,eAAeM,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}