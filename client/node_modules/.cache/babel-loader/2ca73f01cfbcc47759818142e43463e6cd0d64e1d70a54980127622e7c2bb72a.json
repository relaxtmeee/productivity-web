{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport { $host } from './http.user';\nexport const registration = async (email, password) => {\n  const {\n    data\n  } = await $host.post('user/registration', {\n    email,\n    password,\n    role: 'user'\n  });\n  return jwt_decode(data);\n};\nexport const login = async (email, password) => {\n  const {\n    data\n  } = await $host.post('user/login', {\n    email,\n    password\n  });\n  return jwt_decode(data);\n};\nexport const check = async () => {\n  const response = $host.post('api/user/registration');\n  return response;\n};","map":{"version":3,"names":["jwt_decode","$host","registration","email","password","data","post","role","login","check","response"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/services/userAPI.ts"],"sourcesContent":["import jwt_decode from \"jwt-decode\";\nimport { $host} from './http.user';\n\n\nexport const registration = async (email: string, password: string) => {\n    const { data } = await $host.post<any, any>('user/registration', {email, password, role:'user'});    \n    return jwt_decode(data);\n}\n\nexport const login = async (email: string, password: string) => {\n    const { data } = await $host.post('user/login', {email, password});\n    return jwt_decode(data);\n}\n\nexport const check = async ( ) => {\n    const response = $host.post('api/user/registration', );\n    return response;\n}"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,SAASC,KAAK,QAAO,aAAa;AAGlC,OAAO,MAAMC,YAAY,GAAG,OAAOC,KAAa,EAAEC,QAAgB,KAAK;EACnE,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAW,mBAAmB,EAAE;IAACH,KAAK;IAAEC,QAAQ;IAAEG,IAAI,EAAC;EAAM,CAAC,CAAC;EAChG,OAAOP,UAAU,CAACK,IAAI,CAAC;AAC3B,CAAC;AAED,OAAO,MAAMG,KAAK,GAAG,OAAOL,KAAa,EAAEC,QAAgB,KAAK;EAC5D,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,YAAY,EAAE;IAACH,KAAK;IAAEC;EAAQ,CAAC,CAAC;EAClE,OAAOJ,UAAU,CAACK,IAAI,CAAC;AAC3B,CAAC;AAED,OAAO,MAAMI,KAAK,GAAG,YAAa;EAC9B,MAAMC,QAAQ,GAAGT,KAAK,CAACK,IAAI,CAAC,uBAAuB,CAAG;EACtD,OAAOI,QAAQ;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}