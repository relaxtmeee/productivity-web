{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/AuthForm/AuthForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '../../../../ui/Button/Button';\nimport HTag from '../../../../ui/Htag/HTag';\nimport Input from '../../../../ui/Input/Input';\nimport PTag from '../../../../ui/PTag/PTag';\nimport { registration } from '../services/userAPI';\nimport { fetchUser } from '../services/userSlice';\nimport styles from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [register, setRegister] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const sing = async () => {\n    const response = await registration(email, password);\n    dispatch(fetchUser({\n      email: response.email\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(HTag, {\n      htag: \"h2\",\n      children: register ? 'Зарегистрироваться' : 'Войти'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: email,\n      onChange: event => setEmail(event.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0443 \\u043F\\u043E\\u0447\\u0442\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: password,\n      onChange: event => setPassword(event.target.value),\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), register ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.agree,\n      children: [/*#__PURE__*/_jsxDEV(PTag, {\n        size: \"14\",\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0430\\u044E \\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0438\\u0435 \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"check\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.submit,\n      children: [register ? /*#__PURE__*/_jsxDEV(PTag, {\n        size: \"16\",\n        children: [\"\\u0423 \\u0432\\u0430\\u0441 \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setRegister(false),\n          className: styles.swap,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(PTag, {\n        size: \"16\",\n        children: [\"\\u0423 \\u0432\\u0430\\u0441 \\u043D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => setRegister(true),\n          className: styles.swap,\n          children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: sing,\n        children: register ? 'Зарегистрироваться' : 'Войти'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthForm, \"xS6MTJLbpeivHD2TQJaprS31gjM=\", false, function () {\n  return [useDispatch];\n});\n_c = AuthForm;\nexport default AuthForm;\nfunction jwt_decode(token) {\n  throw new Error('Function not implemented.');\n}\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useDispatch","Button","HTag","Input","PTag","registration","fetchUser","styles","AuthForm","register","setRegister","email","setEmail","password","setPassword","dispatch","sing","response","form","event","target","value","agree","submit","swap","jwt_decode","token","Error"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/AuthPage/modules/AuthForm/AuthForm.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../../../../store/store';\nimport Button from '../../../../ui/Button/Button';\nimport HTag from '../../../../ui/Htag/HTag';\nimport Input from '../../../../ui/Input/Input';\nimport PTag from '../../../../ui/PTag/PTag';\nimport { registration } from '../services/userAPI';\nimport { fetchUser, IUser } from '../services/userSlice';\n\n\nimport styles from './AuthForm.module.css';\n\nconst AuthForm = () => {\n\n    const [register, setRegister] = useState(true);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch<AppDispatch>();\n\n    const sing = async () => {\n        const response: IUser = await registration(email, password);\n        dispatch(fetchUser({email: response.email}))\n    }\n\n    return (\n        <div className={styles.form}>\n            <HTag htag='h2'>{register ? 'Зарегистрироваться' : 'Войти'}</HTag>\n            <Input value={email} onChange={(event) => setEmail(event.target.value)} placeholder='Введите вашу почту'/>\n            <Input value={password} onChange={(event) => setPassword(event.target.value)} placeholder='Введите ваш пароль'/>\n            {register \n            ? \n                <div className={styles.agree}>\n                    <PTag size='14'>Подтверждаю согласие на обработку данных</PTag> \n                    <input id='check' type='checkbox'/>\n                    <label htmlFor=\"check\"></label>\n                </div> \n                :\n                null    \n            }\n            <div className={styles.submit}>\n                {register \n                    ? \n                    <PTag size='16'>\n                        У вас уже есть аккаунт? <span onClick={() => setRegister(false)} className={styles.swap}>Войти</span>\n                    </PTag> \n                    :\n                    <PTag size='16'>\n                        У вас нет аккаунта? <span onClick={() => setRegister(true)} className={styles.swap}>Зарегистрироваться</span>\n                    </PTag>\n                }\n                <Button onClick={sing}>{register ? 'Зарегистрироваться' : 'Войти'}</Button>\n            </div>\n\n        </div>\n    );\n};\n\nexport default AuthForm;\n\nfunction jwt_decode(token: any) {\n    throw new Error('Function not implemented.');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}