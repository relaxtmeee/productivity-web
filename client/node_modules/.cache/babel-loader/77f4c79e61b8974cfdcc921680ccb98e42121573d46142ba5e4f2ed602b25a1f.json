{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/components/PostCreate/PostCreate.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchPosts } from '../../../../../store/postsSlice';\nimport { useTypedSelector } from '../../../../../store/selectorTypedHook';\nimport Button from '../../../../../ui/Button/Button';\nimport Input from '../../../../../ui/Input/Input';\nimport Textarea from '../../../../../ui/Textarea/Textarea';\nimport { createPost } from '../../services/http.posts';\nimport styles from './PostCreate.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCreate = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const userId = useTypedSelector(state => {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const dispatch = useDispatch();\n  const onCreatePost = async () => {\n    const date = new Date().toLocaleDateString();\n    try {\n      await createPost({\n        name,\n        description,\n        date,\n        userId\n      });\n      dispatch(fetchPosts());\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.create,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Type name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Type description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onCreatePost,\n      children: \"Create article\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(PostCreate, \"B5opLw1tR15XeSITjy9/IzrhSyQ=\", false, function () {\n  return [useTypedSelector, useDispatch];\n});\n_c = PostCreate;\nexport default PostCreate;\nvar _c;\n$RefreshReg$(_c, \"PostCreate\");","map":{"version":3,"names":["useState","useDispatch","fetchPosts","useTypedSelector","Button","Input","Textarea","createPost","styles","PostCreate","name","setName","description","setDescription","userId","state","user","id","dispatch","onCreatePost","date","Date","toLocaleDateString","error","create","e","target","value"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/PostsPage/modules/components/PostCreate/PostCreate.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchPosts } from '../../../../../store/postsSlice';\nimport { useTypedSelector } from '../../../../../store/selectorTypedHook';\nimport { AppDispatch } from '../../../../../store/store';\nimport Button from '../../../../../ui/Button/Button';\nimport Input from '../../../../../ui/Input/Input';\nimport Textarea from '../../../../../ui/Textarea/Textarea';\nimport { createPost } from '../../services/http.posts';\nimport styles from './PostCreate.module.css';\n\nconst PostCreate = () => {\n\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const userId = useTypedSelector(state => state.user.user?.id);\n    \n    const dispatch = useDispatch<AppDispatch>();\n\n    const onCreatePost = async () => {\n        const date = new Date().toLocaleDateString();\n        try {\n            await createPost({name, description, date, userId});\n            dispatch(fetchPosts());\n        } catch (error) {\n            \n        }\n    }\n\n    return (\n        <div className={styles.create}>\n            <Input value={name} onChange={(e) => setName(e.target.value)} placeholder='Type name'/> \n            <Textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder='Type description'/>   \n            <Button onClick={onCreatePost}>Create article</Button>\n        </div>\n    );\n};\n\nexport default PostCreate;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,SAASC,gBAAgB,QAAQ,wCAAwC;AAEzE,OAAOC,MAAM,MAAM,iCAAiC;AACpD,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,QAAQ,MAAM,qCAAqC;AAC1D,SAASC,UAAU,QAAQ,2BAA2B;AACtD,OAAOC,MAAM,MAAM,yBAAyB;AAAC;AAE7C,MAAMC,UAAU,GAAG,MAAM;EAAA;EAErB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMc,MAAM,GAAGX,gBAAgB,CAACY,KAAK;IAAA;IAAA,2BAAIA,KAAK,CAACC,IAAI,CAACA,IAAI,qDAAf,iBAAiBC,EAAE;EAAA,EAAC;EAE7D,MAAMC,QAAQ,GAAGjB,WAAW,EAAe;EAE3C,MAAMkB,YAAY,GAAG,YAAY;IAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE,CAACC,kBAAkB,EAAE;IAC5C,IAAI;MACA,MAAMf,UAAU,CAAC;QAACG,IAAI;QAAEE,WAAW;QAAEQ,IAAI;QAAEN;MAAM,CAAC,CAAC;MACnDI,QAAQ,CAAChB,UAAU,EAAE,CAAC;IAC1B,CAAC,CAAC,OAAOqB,KAAK,EAAE,CAEhB;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAEf,MAAM,CAACgB,MAAO;IAAA,wBAC1B,QAAC,KAAK;MAAC,KAAK,EAAEd,IAAK;MAAC,QAAQ,EAAGe,CAAC,IAAKd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAC,WAAW,EAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eACvF,QAAC,QAAQ;MAAC,KAAK,EAAEf,WAAY;MAAC,QAAQ,EAAGa,CAAC,IAAKZ,cAAc,CAACY,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAC,WAAW,EAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/G,QAAC,MAAM;MAAC,OAAO,EAAER,YAAa;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACpD;AAEd,CAAC;AAAC,GAzBIV,UAAU;EAAA,QAIGN,gBAAgB,EAEdF,WAAW;AAAA;AAAA,KAN1BQ,UAAU;AA2BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}