{"ast":null,"code":"var _jsxFileName = \"/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/RouterComponent.tsx\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport AuthPage from \"./AuthPage/AuthPage\";\nimport MainPage from \"./MainPage/MainPage\";\nimport { withLayout } from \"./Layout/Layout\";\nimport { useTypedSelector } from \"../store/selectorTypedHook\";\nimport { useEffect } from \"react\";\nimport { check } from \"./AuthPage/modules/services/userAPI\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchedUser, fetchingUser, fetchUser } from \"./AuthPage/modules/services/userSlice\";\nimport Spinner from \"../ui/Spinner/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RouterComponent = () => {\n  _s();\n  const auth = useTypedSelector(state => state.user.userLoadingStatus);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    check().then(data => {\n      dispatch(fetchingUser());\n      dispatch(fetchUser(data));\n    }).catch(() => {\n      dispatch(fetchedUser());\n    }).finally(() => {});\n  }, []);\n  if (!auth) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth\",\n        element: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(RouterComponent, \"8pQ2ZMTFpGSEA+nAiepajDYqGs0=\", false, function () {\n  return [useTypedSelector, useDispatch];\n});\n_c = RouterComponent;\nexport default _c2 = withLayout(RouterComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"RouterComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","AuthPage","MainPage","withLayout","useTypedSelector","useEffect","check","useDispatch","fetchedUser","fetchingUser","fetchUser","Spinner","RouterComponent","auth","state","user","userLoadingStatus","dispatch","then","data","catch","finally"],"sources":["/Users/serzhivanov/Desktop/Coding/Projects/myweb/client/src/pages/RouterComponent.tsx"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route, useNavigate} from \"react-router-dom\";\nimport AuthPage from \"./AuthPage/AuthPage\";\nimport MainPage from \"./MainPage/MainPage\";\nimport { withLayout } from \"./Layout/Layout\";\nimport { useTypedSelector } from \"../store/selectorTypedHook\";\nimport { useEffect, useState } from \"react\";\nimport { check } from \"./AuthPage/modules/services/userAPI\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../store/store\";\nimport { fetchedUser, fetchingUser, fetchUser } from \"./AuthPage/modules/services/userSlice\";\nimport Spinner from \"../ui/Spinner/Spinner\";\n\nconst RouterComponent = ():JSX.Element => {\n\n    const auth = useTypedSelector(state => state.user.userLoadingStatus);\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    useEffect(() => {\n        check()\n            .then((data) => {\n                dispatch(fetchingUser());\n                dispatch(fetchUser(data));\n            })\n            .catch(() => {\n                dispatch(fetchedUser());\n            })\n            .finally(() => {\n\n            })\n    }, [])\n\n    if(!auth) {\n        return <>\n            <Spinner/>\n        </>\n    }\n\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<MainPage/>}/>\n                <Route path=\"/auth\" element={<AuthPage/>}/>\n            </Routes>\n        </Router>\n    );\n};\n\nexport default withLayout(RouterComponent);"],"mappings":";;AAAA,SAASA,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAoB,kBAAkB;AACrF,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,SAAS,QAAkB,OAAO;AAC3C,SAASC,KAAK,QAAQ,qCAAqC;AAC3D,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,WAAW,EAAEC,YAAY,EAAEC,SAAS,QAAQ,uCAAuC;AAC5F,OAAOC,OAAO,MAAM,uBAAuB;AAAC;AAAA;AAE5C,MAAMC,eAAe,GAAG,MAAkB;EAAA;EAEtC,MAAMC,IAAI,GAAGT,gBAAgB,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,iBAAiB,CAAC;EAEpE,MAAMC,QAAQ,GAAGV,WAAW,EAAe;EAE3CF,SAAS,CAAC,MAAM;IACZC,KAAK,EAAE,CACFY,IAAI,CAAEC,IAAI,IAAK;MACZF,QAAQ,CAACR,YAAY,EAAE,CAAC;MACxBQ,QAAQ,CAACP,SAAS,CAACS,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACTH,QAAQ,CAACT,WAAW,EAAE,CAAC;IAC3B,CAAC,CAAC,CACDa,OAAO,CAAC,MAAM,CAEf,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,IAAG,CAACR,IAAI,EAAE;IACN,oBAAO;MAAA,uBACH,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA;IAAE,iBACX;EACP;EAEA,oBACI,QAAC,MAAM;IAAA,uBACH,QAAC,MAAM;MAAA,wBACH,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,eACvC,QAAC,KAAK;QAAC,IAAI,EAAC,OAAO;QAAC,OAAO,eAAE,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACtC;IAAA;IAAA;IAAA;EAAA,QACJ;AAEjB,CAAC;AAAC,GAlCID,eAAe;EAAA,QAEJR,gBAAgB,EAEZG,WAAW;AAAA;AAAA,KAJ1BK,eAAe;AAoCrB,qBAAeT,UAAU,CAACS,eAAe,CAAC;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}